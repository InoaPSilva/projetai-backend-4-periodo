"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _commit = _interopRequireDefault(require("../constants/commit"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const COMMIT_FILE_PATH_INDEX = 3;
const COMMIT_TITLE_LINE_INDEX = 0;
const COMMIT_MESSAGE_LINE_INDEX = 2;

const getDefaultCommitContent = options => {
  /*
    Since the hook is called with `gitmoji --hook $1`
    According to https://git-scm.com/docs/githooks#_prepare_commit_msg,
    the commit file path will be stored in the 4th argument of the command
  */
  const commitFilePath = process.argv[COMMIT_FILE_PATH_INDEX];

  if (options.mode === _commit.default.CLIENT || !_fs.default.existsSync(commitFilePath)) {
    return {
      message: options['message'] || null,
      scope: options['scope'] || null,
      title: options['title'] || null
    };
  }

  const commitFileContent = _fs.default.readFileSync(commitFilePath).toString().split('\n');

  return {
    message: commitFileContent.length > COMMIT_MESSAGE_LINE_INDEX ? commitFileContent[COMMIT_MESSAGE_LINE_INDEX] : null,
    scope: options['scope'],
    title: commitFileContent[COMMIT_TITLE_LINE_INDEX]
  };
};

var _default = getDefaultCommitContent;
exports.default = _default;